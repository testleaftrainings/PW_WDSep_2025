📑 Agenda for Week2 Day2 - Get Started with Playwright
🎯 [ Focus: Kickstart Playwright automation with hands-on basics ]


🕝 Session Highlights

 Recap  
* Key Takeaways from Week2 Day 1

1. Understanding Playwright Architecture
* Core Components and How They Interact  

2. Browser, Context, and Page
* Breaking Down the Key Concepts  
* Real-life Use Cases in Automation  

3. Code Your First Test Script
* Hands-on Activity: Writing and Executing a Basic Script     

4. Understanding the DOM
* What is the DOM and How It Works 












Sort Method internal mechanism:
-------------------------------

let numberArray = [10, 8, 9, 7];
numberArray.sort((a, b) => a - b);


### 🟢 Step 1: Initial Array

[10, 8, 9, 7]
---

### 🟢 Step 2: First Comparisons

1. Compare **10 and 8**

   * a = 10, b = 8 → `10 - 8 = 2` (positive)
   * Swap → `[8, 10, 9, 7]`

2. Compare **10 and 9**

   * a = 10, b = 9 → `10 - 9 = 1` (positive)
   * Swap → `[8, 9, 10, 7]`

3. Compare **10 and 7**

   * a = 10, b = 7 → `10 - 7 = 3` (positive)
   * Swap → `[8, 9, 7, 10]`

---

### 🟢 Step 3: Next Pass

1. Compare **8 and 9**

   * a = 8, b = 9 → `8 - 9 = -1` (negative)
   * Keep order → `[8, 9, 7, 10]`

2. Compare **9 and 7**

   * a = 9, b = 7 → `9 - 7 = 2` (positive)
   * Swap → `[8, 7, 9, 10]`

---

### 🟢 Step 4: Another Pass

1. Compare **8 and 7**

   * a = 8, b = 7 → `8 - 7 = 1` (positive)
   * Swap → `[7, 8, 9, 10]`

Now everything is in order 

---

### Final Sorted Array

[7, 8, 9, 10]

---

Quick Recap:

* `a` and `b` are just **two numbers being compared**.
* The compare function `(a - b)` tells JavaScript whether to swap them.

